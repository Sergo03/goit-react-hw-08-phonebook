{"version":3,"sources":["redux/Auth/auth-selectors.js","redux/Auth/auth-operations.js","redux/Auth/auth-actions.js","Components/Container/Container.js","Components/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublickRoute.js","App.js","redux/Contacts/reducer.js","redux/Auth/auth-reducer.js","redux/store.js","index.js","redux/Contacts/action.js"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","login","logout","getCurrentUser","getState","persistedToken","get","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","marginRight","mapDispatchToProps","onLogout","authOperations","Button","type","variant","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onGetCurrentUser","fallback","path","PublickRoute","items","createReducer","actions","payload","filter","contact","id","loading","_","error","combineReducers","userState","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConf","key","storage","whitelist","store","configureStore","reducer","persistReducer","authreducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","fetchContactRequest","fetchContactSuccsess","fetchContactError","addContactRequest","addContactSuccsess","addContactError","deleteContactRequest","deleteContactSuccsess","deleteContactError","changeFilter"],"mappings":"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","file":"static/js/main.2933316f.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nexport const getUserName = state => state.auth.user.name\r\n","import axios from 'axios'\r\nimport * as authActions from './auth-actions'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest())\r\n\r\n    \r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n\r\n        token.set(response.data.token)\r\n        dispatch(authActions.registerSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message))\r\n    }\r\n};\r\n\r\n\r\nexport const login= credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest())\r\n\r\n    \r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n        token.set(response.data.token)\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.message))\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest())\r\n\r\n    \r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess())\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message))\r\n    }\r\n}\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(response.data))\r\n    } catch (error) {\r\n         dispatch(authActions.getCurrentUserError(error.message))\r\n    }\r\n\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import React from 'react';\r\n\r\n\r\nconst Container = ({ children }) => <div className='container'>{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated&&<NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n     Contacts\r\n    </NavLink>} \r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\nexport default connect(mapStateToProps)(Navigation) ;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as authSelectors from '../../redux/Auth/auth-selectors'\r\nimport * as authOperations from '../../redux/Auth/auth-operations'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button type=\"button\" variant=\"dark\" onClick={onLogout}>\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name:authSelectors.getUserName(state)\r\n})\r\n\r\nconst mapDispatchToProps =  {\r\n  onLogout:authOperations.logout\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Registration\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport * as authSelectors from '../redux/Auth/auth-selectors'\r\n\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '2px solid red',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated:authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component,Suspense,lazy } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Container from './Components/Container/Container'\r\nimport AppBar from './Components/AppBar'\r\nimport * as authOperations from './redux/Auth/auth-operations'\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from './Components/PrivateRoute'\r\nimport PublickRoute from './Components/PublickRoute'\r\n\r\nconst HomeView = lazy(() => import('./Components/View/Home'))\r\nconst RegisterView = lazy(() => import('./Components/View/RegisterView'))\r\nconst LoginView = lazy(() => import('./Components/View/LoginView'))\r\nconst Contacts = lazy(() => import('./Components/View/Contacts'))\r\n\r\n\r\nclass App extends Component{\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n\r\n  render() {\r\n \r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>loading...</p>}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomeView} />\r\n            <PublickRoute path=\"/register\" restricted component={RegisterView} redirectTo=\"/contacts\" />\r\n            <PublickRoute path=\"/login\" restricted component={LoginView} redirectTo=\"/contacts\" />\r\n            <PrivateRoute path=\"/contacts\" component={Contacts} redirectTo=\"/login\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps= {\r\n  onGetCurrentUser:authOperations.getCurrentUser\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App) ;","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as actions from './action'\r\n\r\nconst items = createReducer([], {\r\n    [actions.fetchContactSuccsess]:(state,{payload})=>payload,\r\n    [actions.addContactSuccsess]: (state, {payload}) => [...state, payload],\r\n    [actions.deleteContactSuccsess]:(state, {payload})=>state.filter(contact => contact.id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactRequest]: () => true,\r\n  [actions.fetchContactSuccsess]: () => false,\r\n  [actions.fetchContactError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccsess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccsess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]:(_,{payload})=>payload,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [actions.fetchContactError]: (_,{payload})=>payload,\r\n    [actions.addContactError]:(_,{payload})=>payload,\r\n    [actions.deleteContactError]:(_,{payload})=>payload\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers } from 'redux';\r\n// import types from './types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// });","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as authActions from './auth-actions';\r\n\r\nconst userState = { name: null, email: null };\r\n\r\n const user = createReducer(userState, {\r\n     [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n     [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n     [authActions.logoutSuccess]: () => userState,\r\n     [authActions.getCurrentUserSuccess]:(_,{payload})=>payload\r\n});\r\n\r\n const token = createReducer(null, {\r\n     [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n     [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n     [authActions.logoutSuccess]:()=>null\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getCurrentUserError]:(_,{payload})=>payload\r\n })\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]:()=>false\r\n})\r\n\r\n\r\nexport default combineReducers({user,isAuthenticated, token,error})","import contactsReducer from './Contacts/reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport authreducer from './Auth/auth-reducer'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n})]\r\n\r\nconst authPersistConf = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist:['token']\r\n}\r\n\r\n export const store = configureStore({\r\n  reducer: {\r\n    auth:persistReducer(authPersistConf,authreducer) ,\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\n export const  persistor = persistStore(store)\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { Provider } from \"react-redux\";\r\nimport  './styles.css'\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccsess = createAction('contacts/fetchCotactSuccsess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccsess = createAction('contacts/addCotactSuccsess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccsess = createAction('contacts/deleteCotactSuccsess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\n\r\n\r\n export const  changeFilter=createAction('contacts/changeFilter')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}